/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Control.ControlCliente;
import Control.ControlProducto;
import Control.ControlVenta;
import Repository.relProductoVentasRepository;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import objetosNegocio.Cliente;
import objetosNegocio.Producto;
import objetosNegocio.Venta;
import objetosNegocio.relProductoVentas;

/**
 *
 * @author Luis
 */
public class FrmRegistroVentas extends javax.swing.JFrame {

    private ControlCliente controlCliente;
    private ControlProducto controlProducto;
    private ControlVenta controlVenta;
    private List<Producto> productosSeleccionados;
    private List<Integer> cantidades;

    public FrmRegistroVentas() {

        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        controlCliente = new ControlCliente();
        controlProducto = new ControlProducto();
        controlVenta = new ControlVenta();
        productosSeleccionados = new ArrayList();
        cantidades = new ArrayList();
        this.cargarCombo();
        this.cargarProductos();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDetalleVentas = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cBoxClientes = new javax.swing.JComboBox<>();
        labelSubtotal = new javax.swing.JLabel();
        txtSubtotal = new javax.swing.JTextField();
        lblDescuento = new javax.swing.JLabel();
        txtDescuento = new javax.swing.JTextField();
        lblTotal = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        btnRegistrar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtBuscarProducto = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        paneBuscadorProductos = new java.awt.ScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableBuscadorProductos = new javax.swing.JTable();
        lblProductosSelecionados = new javax.swing.JLabel();
        paneProductosSeleccionados = new java.awt.ScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableProductosSeleccionados = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        provedoresOption = new javax.swing.JMenuItem();
        productosOption = new javax.swing.JMenuItem();
        categoriasOption = new javax.swing.JMenuItem();
        clientesOption = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        registrarVentaOption = new javax.swing.JMenuItem();
        busquedaVentaOption = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Registro de ventas");

        lblDetalleVentas.setText("Detalles de Ventas");

        jLabel1.setText("Cliente");

        cBoxClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cBoxClientesActionPerformed(evt);
            }
        });

        labelSubtotal.setText("Subtotal");

        txtSubtotal.setEditable(false);
        txtSubtotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSubtotalKeyTyped(evt);
            }
        });

        lblDescuento.setText("Descuento");

        txtDescuento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDescuentoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDescuentoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDescuentoKeyTyped(evt);
            }
        });

        lblTotal.setText("Total");

        txtTotal.setEditable(false);

        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jLabel2.setText("Buscador de Productos");

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        tableBuscadorProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Productos", "Nombre", "Precio Actual", "Stock"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableBuscadorProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableBuscadorProductosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableBuscadorProductos);

        paneBuscadorProductos.add(jScrollPane1);

        lblProductosSelecionados.setText("Productos Seleccionados");

        tableProductosSeleccionados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Producto", "Nombre", "Precio Actual", "Cantidad", "Monto Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableProductosSeleccionados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableProductosSeleccionadosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableProductosSeleccionados);

        paneProductosSeleccionados.add(jScrollPane2);

        jMenu1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Daniel\\Desktop\\Proyecto02_00000192937\\img\\opcionesIcon.png")); // NOI18N
        jMenu1.setText("Opciones");

        provedoresOption.setIcon(new javax.swing.ImageIcon("C:\\Users\\Daniel\\Desktop\\Proyecto02_00000192937\\img\\provedorIcon.png")); // NOI18N
        provedoresOption.setText("Provedores");
        provedoresOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                provedoresOptionActionPerformed(evt);
            }
        });
        jMenu1.add(provedoresOption);

        productosOption.setIcon(new javax.swing.ImageIcon("C:\\Users\\Daniel\\Desktop\\Proyecto02_00000192937\\img\\productoIcon.png")); // NOI18N
        productosOption.setText("Productos");
        productosOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productosOptionActionPerformed(evt);
            }
        });
        jMenu1.add(productosOption);

        categoriasOption.setIcon(new javax.swing.ImageIcon("C:\\Users\\Daniel\\Desktop\\Proyecto02_00000192937\\img\\categoriaIcon.png")); // NOI18N
        categoriasOption.setText("Categorias");
        categoriasOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoriasOptionActionPerformed(evt);
            }
        });
        jMenu1.add(categoriasOption);

        clientesOption.setIcon(new javax.swing.ImageIcon("C:\\Users\\Daniel\\Desktop\\Proyecto02_00000192937\\img\\clienteIcon.png")); // NOI18N
        clientesOption.setText("Clientes");
        clientesOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientesOptionActionPerformed(evt);
            }
        });
        jMenu1.add(clientesOption);

        jMenu3.setIcon(new javax.swing.ImageIcon("C:\\Users\\Daniel\\Desktop\\Proyecto02_00000192937\\img\\ventaMenuBarMenuIcon.png")); // NOI18N
        jMenu3.setText("Ventas");

        registrarVentaOption.setIcon(new javax.swing.ImageIcon("C:\\Users\\Daniel\\Desktop\\Proyecto02_00000192937\\img\\ventaIcon.png")); // NOI18N
        registrarVentaOption.setText("Registrar Venta");
        registrarVentaOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarVentaOptionActionPerformed(evt);
            }
        });
        jMenu3.add(registrarVentaOption);

        busquedaVentaOption.setIcon(new javax.swing.ImageIcon("C:\\Users\\Daniel\\Desktop\\Proyecto02_00000192937\\img\\consultarVentaIcon.png")); // NOI18N
        busquedaVentaOption.setText("Busqueda Venta");
        busquedaVentaOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                busquedaVentaOptionActionPerformed(evt);
            }
        });
        jMenu3.add(busquedaVentaOption);

        jMenu1.add(jMenu3);

        jMenuItem1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Daniel\\Desktop\\Proyecto02_00000192937\\img\\salirIcon.png")); // NOI18N
        jMenuItem1.setText("Salir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Daniel\\Desktop\\Proyecto02_00000192937\\img\\aboutIcon.png")); // NOI18N
        jMenu2.setText("Acerca de");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDetalleVentas)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelSubtotal)
                            .addComponent(lblDescuento)
                            .addComponent(jLabel1)
                            .addComponent(lblTotal))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cBoxClientes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtSubtotal)
                                .addComponent(txtDescuento)
                                .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(btnRegistrar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCancelar)))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtBuscarProducto)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(lblProductosSelecionados))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar))
                    .addComponent(paneProductosSeleccionados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(paneBuscadorProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDetalleVentas)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cBoxClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBuscarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelSubtotal)
                            .addComponent(txtSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDescuento)
                            .addComponent(txtDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTotal)
                            .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRegistrar)
                            .addComponent(btnCancelar)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(paneBuscadorProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblProductosSelecionados)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paneProductosSeleccionados, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cBoxClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cBoxClientesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cBoxClientesActionPerformed

    private void tableBuscadorProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableBuscadorProductosMouseClicked
        Producto producto = this.seleccionarProducto();
        this.cargarProductosSeleccionados(producto);
    }//GEN-LAST:event_tableBuscadorProductosMouseClicked

    private void tableProductosSeleccionadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableProductosSeleccionadosMouseClicked
        this.eliminarProductoTabla();
    }//GEN-LAST:event_tableProductosSeleccionadosMouseClicked

    private void txtDescuentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescuentoKeyPressed

    }//GEN-LAST:event_txtDescuentoKeyPressed

    private void txtDescuentoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescuentoKeyReleased
        this.calcularMontos();
    }//GEN-LAST:event_txtDescuentoKeyReleased

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        this.insertarVenta();
        this.limpiarFormulario();
        this.limpiarTabla();
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        this.cargarProductos();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtSubtotalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSubtotalKeyTyped

    }//GEN-LAST:event_txtSubtotalKeyTyped

    private void txtDescuentoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescuentoKeyTyped
        this.validarNumerico(evt);
        this.limitarCaracteres(txtDescuento, evt, 2);
    }//GEN-LAST:event_txtDescuentoKeyTyped

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.limpiarFormulario();
        this.limpiarTabla();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void provedoresOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_provedoresOptionActionPerformed
        FrmProvedores frmProvedores = new FrmProvedores();
        frmProvedores.setVisible(true);
        dispose();
    }//GEN-LAST:event_provedoresOptionActionPerformed

    private void productosOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productosOptionActionPerformed
        FrmProducto frmProductos = new FrmProducto();
        frmProductos.setVisible(true);
        dispose();
    }//GEN-LAST:event_productosOptionActionPerformed

    private void categoriasOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoriasOptionActionPerformed
        FrmCategorias frmCategorias = new FrmCategorias();
        frmCategorias.setVisible(true);
        dispose();
    }//GEN-LAST:event_categoriasOptionActionPerformed

    private void clientesOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientesOptionActionPerformed
        FrmClientes frmClientes = new FrmClientes();
        frmClientes.setVisible(true);
        dispose();
    }//GEN-LAST:event_clientesOptionActionPerformed

    private void registrarVentaOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarVentaOptionActionPerformed
        FrmRegistroVentas frmRegistroVenta = new FrmRegistroVentas();
        frmRegistroVenta.setVisible(true);
        dispose();
    }//GEN-LAST:event_registrarVentaOptionActionPerformed

    private void busquedaVentaOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_busquedaVentaOptionActionPerformed
        FrmBusquedaVentas frmBusquedaVenta = new FrmBusquedaVentas();
        frmBusquedaVenta.setVisible(true);
        dispose();
    }//GEN-LAST:event_busquedaVentaOptionActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        JOptionPane.showMessageDialog(this, "Alumno: Daniel Alejandro Ornelas\nID: 00000192937", "Información", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenu2MouseClicked

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed

    }//GEN-LAST:event_jMenu2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmRegistroVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmRegistroVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmRegistroVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmRegistroVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmRegistroVentas().setVisible(true);
            }
        });
    }

    private void limitarCaracteres(javax.swing.JTextField textField, java.awt.event.KeyEvent evt, int longitud) {
        if (textField.getText().length() >= longitud) {
            evt.consume();
        }
    }

    private void validarNumerico(java.awt.event.KeyEvent evt) {
        char c = evt.getKeyChar();
        if (Character.isLetter(c) && !evt.isAltDown()) {
            evt.consume();
        }
    }

    private void insertarVenta() {
        if (!txtSubtotal.getText().equals("") && !txtTotal.getText().equals("") && productosSeleccionados.size() > 0 && cBoxClientes.getSelectedItem() != null) {
            Venta venta = new Venta();
            Date fecha = new Date();
            venta.setFecha(fecha);
            Cliente cliente = (Cliente) cBoxClientes.getSelectedItem();
            venta.setCliente(cliente);
            if (!txtDescuento.getText().equals("")) {
                venta.setDescuento(Float.parseFloat(txtDescuento.getText()));
            } else {
                venta.setDescuento(0.0f);
            }
            venta.setMontoFinal(Float.parseFloat(txtTotal.getText()));
            this.controlVenta.insertarVenta(venta);

            List<relProductoVentas> relaciones = new ArrayList<>();

            for (int i = 0; i < productosSeleccionados.size(); i++) {
                relProductoVentas relacion = new relProductoVentas(productosSeleccionados.get(i), venta, productosSeleccionados.get(i).getPrecioActual(),
                        cantidades.get(i), (productosSeleccionados.get(i).getPrecioActual() * cantidades.get(i)));
                relaciones.add(relacion);

            }

            relProductoVentasRepository relR = new relProductoVentasRepository();
            for (relProductoVentas relacione : relaciones) {
                relR.insertarRelacion(relacione);
            }

        }

    }

    private Producto seleccionarProducto() {
        int fila = this.tableBuscadorProductos.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "Debes seleccionar un producto ", "Información", JOptionPane.INFORMATION_MESSAGE);
        } else {
            DefaultTableModel modelo = (DefaultTableModel) this.tableBuscadorProductos.getModel();
            int idProducto = (int) modelo.getValueAt(fila, 0);
            Producto producto = controlProducto.consultarProducto(idProducto);

            if (producto != null) {
                return producto;
            }
        }
        return null;
    }

    private void cargarProductosSeleccionados(Producto producto) {
        DefaultTableModel modelo = (DefaultTableModel) tableProductosSeleccionados.getModel();
        modelo.setRowCount(0);
        int row = -1;

        for (int i = 0; i < productosSeleccionados.size(); i++) {
            if (productosSeleccionados.get(i).equals(producto)) {
                row = i;
                break;
            }
        }

        if (row == -1) {
            productosSeleccionados.add(producto);
            cantidades.add(1);

            for (int i = 0; i < productosSeleccionados.size(); i++) {

                Object[] lista = new Object[]{
                    productosSeleccionados.get(i).getId(),
                    productosSeleccionados.get(i).getNombre(),
                    productosSeleccionados.get(i).getPrecioActual(),
                    cantidades.get(i),
                    (cantidades.get(i) * productosSeleccionados.get(i).getPrecioActual())
                };
                modelo.addRow(lista);
            }
        } else {
            cantidades.set(row, cantidades.get(row) + 1);
            for (int i = 0; i < productosSeleccionados.size(); i++) {
                Object[] lista = new Object[]{
                    productosSeleccionados.get(i).getId(),
                    productosSeleccionados.get(i).getNombre(),
                    productosSeleccionados.get(i).getPrecioActual(),
                    cantidades.get(i),
                    (cantidades.get(i) * productosSeleccionados.get(i).getPrecioActual())

                };
                modelo.addRow(lista);
            }
        }
        this.calcularMontos();
    }

    private void eliminarProductoTabla() {
        int fila = this.tableProductosSeleccionados.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "Debes seleccionar un producto ", "Información", JOptionPane.INFORMATION_MESSAGE);
        } else {
            DefaultTableModel modelo = (DefaultTableModel) this.tableProductosSeleccionados.getModel();
            modelo.setRowCount(0);
            productosSeleccionados.remove(fila);
            cantidades.remove(fila);

            for (int i = 0; i < productosSeleccionados.size(); i++) {
                Object[] lista = new Object[]{
                    productosSeleccionados.get(i).getId(),
                    productosSeleccionados.get(i).getNombre(),
                    productosSeleccionados.get(i).getPrecioActual(),
                    cantidades.get(i),
                    (cantidades.get(i) * productosSeleccionados.get(i).getPrecioActual())

                };
                modelo.addRow(lista);
            }
        }
        this.calcularMontos();

    }
    

    private void calcularMontos() {

        float subtotal = 0;
        float descuento = 0f;

        DefaultTableModel modelo = (DefaultTableModel) this.tableProductosSeleccionados.getModel();
        for (int i = 0; i < productosSeleccionados.size(); i++) {
            subtotal += (float) modelo.getValueAt(i, 4);
        }

        if (!txtDescuento.getText().equals("")) {
            descuento = subtotal * (Float.parseFloat(txtDescuento.getText()) / 100);
        }
        float total = subtotal - descuento;
        txtSubtotal.setText(String.valueOf(subtotal));
        txtTotal.setText(String.valueOf(total));
    }

    private void cargarProductos() {
        List<Producto> productos = this.controlProducto.consultarProductos(txtBuscarProducto.getText());
        if (productos != null) {
            DefaultTableModel modelo = (DefaultTableModel) tableBuscadorProductos.getModel();
            modelo.setRowCount(0);
            for (Producto producto : productos) {
                modelo.addRow(producto.toArray());
            }
        }
    }

    private void cargarCombo() {

        cBoxClientes.removeAllItems();
        List<Cliente> clientes = this.controlCliente.consultarClientes("");
        DefaultComboBoxModel modelo = new DefaultComboBoxModel();
        for (Cliente cliente : clientes) {
            modelo.addElement(cliente);
        }
        this.cBoxClientes.setModel(modelo);
    }

    private void limpiarTabla() {
        DefaultTableModel modelo = (DefaultTableModel) tableProductosSeleccionados.getModel();
        modelo.setRowCount(0);
        productosSeleccionados.clear();
        cantidades.clear();
        for (int i = 0; i < productosSeleccionados.size(); i++) {
            Object[] lista = new Object[]{
                productosSeleccionados.get(i).getId(),
                productosSeleccionados.get(i).getNombre(),
                productosSeleccionados.get(i).getPrecioActual(),
                cantidades.get(i),
                (cantidades.get(i) * productosSeleccionados.get(i).getPrecioActual())

            };
            modelo.addRow(lista);
        }
    }

    private void limpiarFormulario() {
        txtSubtotal.setText("");
        txtDescuento.setText("");
        txtTotal.setText("");
        txtBuscarProducto.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JMenuItem busquedaVentaOption;
    private javax.swing.JComboBox<String> cBoxClientes;
    private javax.swing.JMenuItem categoriasOption;
    private javax.swing.JMenuItem clientesOption;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelSubtotal;
    private javax.swing.JLabel lblDescuento;
    private javax.swing.JLabel lblDetalleVentas;
    private javax.swing.JLabel lblProductosSelecionados;
    private javax.swing.JLabel lblTotal;
    private java.awt.ScrollPane paneBuscadorProductos;
    private java.awt.ScrollPane paneProductosSeleccionados;
    private javax.swing.JMenuItem productosOption;
    private javax.swing.JMenuItem provedoresOption;
    private javax.swing.JMenuItem registrarVentaOption;
    private javax.swing.JTable tableBuscadorProductos;
    private javax.swing.JTable tableProductosSeleccionados;
    private javax.swing.JTextField txtBuscarProducto;
    private javax.swing.JTextField txtDescuento;
    private javax.swing.JTextField txtSubtotal;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
